version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: text-to-video-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: text-to-video-api
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - MAX_CONCURRENT_JOBS=1  # Reduced for local development
      - MODEL_CACHE_DIR=/app/model_cache
      - OUTPUT_DIR=/app/outputs
      - HOST=0.0.0.0
      - PORT=8000
      - WORKERS=1
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    volumes:
      - model_cache:/app/model_cache
      - video_outputs:/app/outputs
      - ./backend:/app  # Mount source for development
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    runtime: nvidia  # For GPU support
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: text-to-video-frontend
    ports:
      - "3000:80"
    depends_on:
      - api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local
  model_cache:
    driver: local
  video_outputs:
    driver: local

networks:
  default:
    name: text-to-video-network 